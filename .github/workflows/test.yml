name: Tests / Code Coverage
#  Tests / Code Coverage workflow runs unit tests and uploads a code coverage report
#  This workflow is run on pushes to main & every Pull Requests where a .go, .mod, .sum have been changed
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: technote-space/get-diff-action@v6.0.1
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test & coverage report creation
        run: |
          go test -mod=readonly -timeout 30m -coverprofile=profile.out -covermode=atomic 
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-coverage"
          path: ./profile.out

  test-race:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: technote-space/get-diff-action@v6.0.1
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test & coverage report creation
        run: |
          go test -mod=readonly -json -timeout 30m -race ./... > race-output.txt
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-race-output"
          path: ./race-output.txt

  race-detector-report:
    runs-on: ubuntu-latest
    needs: [test-race, install-tparse]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.0.1
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-race-output"
        if: env.GIT_DIFF
      - uses: actions/cache@v3
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-tparse-binary
        if: env.GIT_DIFF
      - name: Generate test report (go test -race)
        run: cat race-output.txt | ~/go/bin/tparse
        if: env.GIT_DIFF

